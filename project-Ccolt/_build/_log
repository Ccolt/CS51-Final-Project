### Starting build.
# Target: test_eval.ml.depends, tags: { warn(A-4-33-40-41-42-43-34-44), extension:ml, file:test_eval.ml, not_hygienic, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamldep.opt -modules test_eval.ml > test_eval.ml.depends # cached
# Target: evaluation.ml.depends, tags: { warn(A-4-33-40-41-42-43-34-44), extension:ml, file:evaluation.ml, not_hygienic, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamldep.opt -modules evaluation.ml > evaluation.ml.depends
# Target: expr.mli.depends, tags: { warn(A-4-33-40-41-42-43-34-44), extension:mli, file:expr.mli, not_hygienic, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamldep.opt -modules expr.mli > expr.mli.depends # cached
# Target: expr.cmi, tags: { warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:mli, file:expr.mli, interf, not_hygienic, ocaml, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamlc.opt -c -thread -strict-sequence -w A-4-33-40-41-42-43-34-44 -o expr.cmi expr.mli # cached
# Target: miniml.ml.depends, tags: { warn(A-4-33-40-41-42-43-34-44), extension:ml, file:miniml.ml, not_hygienic, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamldep.opt -modules miniml.ml > miniml.ml.depends # cached
# Target: evaluation.cmo, tags: { warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:cmo, extension:ml, file:evaluation.cmo, file:evaluation.ml, implem, not_hygienic, ocaml, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamlc.opt -c -thread -strict-sequence -w A-4-33-40-41-42-43-34-44 -o evaluation.cmo evaluation.ml
+ /home/charl/.opam/4.06.0/bin/ocamlc.opt -c -thread -strict-sequence -w A-4-33-40-41-42-43-34-44 -o evaluation.cmo evaluation.ml
File "evaluation.ml", line 147, characters 75-76:
Warning 29: unescaped end-of-line in a string constant (non-portable code)
File "evaluation.ml", line 168, characters 61-62:
Warning 29: unescaped end-of-line in a string constant (non-portable code)
File "evaluation.ml", line 112, characters 14-501:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Closure (_, _)
File "evaluation.ml", line 111, characters 27-555:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Closure (_, _)
File "evaluation.ml", line 128, characters 25-217:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Closure (_, _)
File "evaluation.ml", line 141, characters 42-52:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Closure (_, _)
File "evaluation.ml", line 149, characters 32-50:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Closure (_, _)
File "evaluation.ml", line 153, characters 10-24:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Closure (_, _)
File "evaluation.ml", line 166, characters 38-56:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Closure (_, _)
File "evaluation.ml", line 182, characters 10-20:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Closure (_, _)
File "evaluation.ml", line 199, characters 10-22:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Closure (_, _)
# Target: miniml_lex.mll, tags: { warn(A-4-33-40-41-42-43-34-44), extension:mll, file:miniml_lex.mll, lexer, not_hygienic, ocaml, ocamllex, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamllex.opt -q miniml_lex.mll # cached
# Target: miniml_lex.ml.depends, tags: { warn(A-4-33-40-41-42-43-34-44), extension:ml, file:miniml_lex.ml, not_hygienic, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamldep.opt -modules miniml_lex.ml > miniml_lex.ml.depends # cached
# Target: miniml_parse.mly, tags: { warn(A-4-33-40-41-42-43-34-44), extension:mly, file:miniml_parse.mly, infer, not_hygienic, ocaml, ocamlyacc, parser, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamlyacc miniml_parse.mly # cached
# Target: miniml_parse.mli.depends, tags: { warn(A-4-33-40-41-42-43-34-44), extension:mli, file:miniml_parse.mli, not_hygienic, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamldep.opt -modules miniml_parse.mli > miniml_parse.mli.depends # cached
# Target: miniml_parse.cmi, tags: { warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:mli, file:miniml_parse.mli, interf, not_hygienic, ocaml, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamlc.opt -c -thread -strict-sequence -w A-4-33-40-41-42-43-34-44 -o miniml_parse.cmi miniml_parse.mli # cached
# Target: miniml_lex.cmo, tags: { warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:cmo, extension:ml, file:miniml_lex.cmo, file:miniml_lex.ml, implem, not_hygienic, ocaml, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamlc.opt -c -thread -strict-sequence -w A-4-33-40-41-42-43-34-44 -o miniml_lex.cmo miniml_lex.ml # cached
# Target: miniml.cmo, tags: { warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:cmo, extension:ml, file:miniml.cmo, file:miniml.ml, implem, not_hygienic, ocaml, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamlc.opt -c -thread -strict-sequence -w A-4-33-40-41-42-43-34-44 -o miniml.cmo miniml.ml
# Target: test_eval.cmo, tags: { warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:cmo, extension:ml, file:test_eval.cmo, file:test_eval.ml, implem, not_hygienic, ocaml, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamlc.opt -c -thread -strict-sequence -w A-4-33-40-41-42-43-34-44 -o test_eval.cmo test_eval.ml
# Target: expr.ml.depends, tags: { warn(A-4-33-40-41-42-43-34-44), extension:ml, file:expr.ml, not_hygienic, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamldep.opt -modules expr.ml > expr.ml.depends # cached
# Target: expr.cmo, tags: { warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:cmo, extension:ml, file:expr.cmo, file:expr.ml, implem, not_hygienic, ocaml, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamlc.opt -c -thread -strict-sequence -w A-4-33-40-41-42-43-34-44 -o expr.cmo expr.ml # cached
# Target: miniml_parse.ml.depends, tags: { warn(A-4-33-40-41-42-43-34-44), extension:ml, file:miniml_parse.ml, not_hygienic, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamldep.opt -modules miniml_parse.ml > miniml_parse.ml.depends # cached
# Target: miniml_parse.cmo, tags: { warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:cmo, extension:ml, file:miniml_parse.cmo, file:miniml_parse.ml, implem, not_hygienic, ocaml, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamlc.opt -c -thread -strict-sequence -w A-4-33-40-41-42-43-34-44 -o miniml_parse.cmo miniml_parse.ml # cached
# Target: test_eval.byte, tags: { warn(A-4-33-40-41-42-43-34-44), byte, dont_link_with, extension:byte, file:test_eval.byte, link, not_hygienic, ocaml, program, quiet, strict-sequence, thread, traverse, use_str, use_unix }
/home/charl/.opam/4.06.0/bin/ocamlc.opt unix.cma str.cma -thread threads.cma expr.cmo evaluation.cmo miniml_parse.cmo miniml_lex.cmo miniml.cmo test_eval.cmo -o test_eval.byte
# Compilation successful.
